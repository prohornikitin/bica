import re
from bica.intentionalities import InSpace, InVec
from .gpt import gpt, Message


def numbers_from_reply(reply: str) -> list[float]: 
    numbers = re.findall(r"[-+]?\d*\.\d+|\d+", reply)
    return [float(num) for num in numbers]


def intensional_calc(space: InSpace, phrase: str) -> InVec:
    cat_str = ', '.join(space.axes)
    num = len(space.axes)
    string = f'''
    Ты механизм по определению интенсивности интенcиональностей в речи человека, связанных с его поведением в различных социальных ситуациях.
    В твоем распоряжении только список из {num} интенcиональностей для угадывания(они перечислены через запятую): {cat_str}. 
    Далее есть предложение: "{phrase}"
    Оцени интенсивность содержания каждой интенции в предложении.
    В конце выведи эти интенсивности по шкале от 0 до 1:
    где 0 - очень низкая (интенция не прослеживается вообще),
    0.25 слабая интенсивность (интенция почти незаметна),
    0.5 - средняя интенсивность (интенция присутствует, но выражена неявно),
    0.75 - умеренная интенсивность (интенция точно присутствует),
    а 1 - сильная интенсивность (интенция является главным мотивом фразы).
    Значения которые ты укажешь не обязательно должны равняться выше указанным, это всего лишь отметки на шкале.
    Выведи ТОЛЬКО значения интенсивности каждой интенции через запятую (всего должно быть {num} число). Не выводи названия самих интенции
    и не пиши порядковые номера.
    Перед ответом проверь правильность каждой цифры отдельно на правдоподобность и исправь если что-то нашёл.
    '''
    question = Message('assistant', string)
    reply = gpt([question])
    return InVec(space, numbers_from_reply(reply))

